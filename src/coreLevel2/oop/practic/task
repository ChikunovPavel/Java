1- создать класс Hero, представляющий собой героя и содержаший поле name
    Добавить конструктор, принимающий имя героя и геттер для имени(сеттер не нужен)
    Добавить метод attacEnemy(),выводяший в консоль сообщение о том. что герой атакует врага
    Создать класс TrainingGround, содержащий метод Main. протестировать создание героя и его атаку
2 - Создать классы Warrior,Mage, Archer, представляющий собой класс наследник Hero
    Переопределить в них методы arrackEnemy() для вывода специализированного для этого класса сообщения об атаке
    Протестировать создание героев различных классов и их атаки в классе TraningGround
3- Создать класс Enemy, представляющий собой врага и содержаший поле health(количство здоровья )
    Добавить конструктор, принимающий количество здоровья, а так же сеттер и геттер
    Добавить метод takeDamage(int damage), который уменшает количество здоровья в соответствие с полученым уроном
    Переписать метод attackEnemy класса Hero, добавить ему параметр типа Enemy
    Метод должен вызывать у врага метод takeDamage и передавать в него  определенное количества урона
    Переопределить метод в подклассах Warior,Mage,Archer так, чтоб каждый герой наносил врагу разное количество урона
4- Сделать класс Hero  и его метод attackEnamy абстрактным
5- Создать интерфейс Mortal, содержащий метод isAlive
        Сделать так, чтоб класс Enamy реализовывал интрфейс Mortal
        Определить метод isAlive  в классе Enemy так чтоб тот возврашал true, если количество здоровья врага больше 0
6- Создать класс BattelGround c методом main, в котором создать симуляцию героя, атакующего врага.
7* Добавить герою показатель здоровья и возможность погибнуть
        Добавать возможность врагу атаковать в ответ
        Создать несколько видов врагов(наследников класса Enemy) с разными способностями (наример зомби имеет шанс воскреснуть при гибели)
        Дать героем уникальные способности
        Продемонстрировать сражение героя с несколькими соперниками